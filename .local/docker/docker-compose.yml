version: '3.5'

services:
  reverse-proxy:
    image: traefik:v2.1
    ports:
      - "7777:7777"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yaml:/traefik.yaml
      - ./traefik/traefik-dynamic-config.yaml:/traefik-dynamic-config.yaml
      - ../certs:/certs

  api:
    build:
      context: ./api
    working_dir: /go/src/app-dev
    #environment:
      #HTTP_PORT: 8080
    volumes:
      - ../../api:/go/src/app-dev
    labels:
      - "traefik.http.routers.api.rule=Host(`mimisbrunnr.local`)"
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
      - "traefik.http.routers.api.tls=true"

  pgadmin:
    image: dpage/pgadmin4
    # runs on port 80
    ports:
      - "8989:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@ymir.local
      PGADMIN_DEFAULT_PASSWORD: iampgadmin
    volumes:
      - "../docker/pgadmin/servers.json:/pgadmin4/servers.json"
    labels:
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.local`)"
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.pgadmin.tls=true"