// Code generated by mockery v2.10.0. DO NOT EDIT.

package schema

import mock "github.com/stretchr/testify/mock"

// HasSchema is an autogenerated mock type for the hasSchema type
type HasSchema struct {
	mock.Mock
}

type HasSchema_Expecter struct {
	mock *mock.Mock
}

func (_m *HasSchema) EXPECT() *HasSchema_Expecter {
	return &HasSchema_Expecter{mock: &_m.Mock}
}

// GetRDBSchema provides a mock function with given fields:
func (_m *HasSchema) GetRDBSchema() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// HasSchema_GetRDBSchema_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRDBSchema'
type HasSchema_GetRDBSchema_Call struct {
	*mock.Call
}

// GetRDBSchema is a helper method to define mock.On call
func (_e *HasSchema_Expecter) GetRDBSchema() *HasSchema_GetRDBSchema_Call {
	return &HasSchema_GetRDBSchema_Call{Call: _e.mock.On("GetRDBSchema")}
}

func (_c *HasSchema_GetRDBSchema_Call) Run(run func()) *HasSchema_GetRDBSchema_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *HasSchema_GetRDBSchema_Call) Return(_a0 string) *HasSchema_GetRDBSchema_Call {
	_c.Call.Return(_a0)
	return _c
}
